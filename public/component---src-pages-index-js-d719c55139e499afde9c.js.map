{"version":3,"sources":["webpack:///./src/components/plots.js","webpack:///./src/pages/index.js"],"names":["Plot","filename","html","type","src","className","dangerouslySetInnerHTML","__html","Plots","data","allMarkdownRemark","edges","map","node","key","frontmatter","slug","query","IndexPage","title","markdownRemark","allReferencesYaml","i","id","href","url","text"],"mappings":"qMAsCMA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACX,oCACE,gCACE,2BAAOC,KAAK,gBAAgBC,IAAG,SAAWH,KAE5C,yBAAKI,UAAU,eAAeC,wBAAyB,CAAEC,OAAQL,OAItDM,EA5CD,WACZ,IAAMC,EAAI,OAqBV,OACE,oCACGA,EAAKC,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,EAAD,CACEC,IAAKD,EAAKE,YAAYC,KACtBf,SAAUY,EAAKE,YAAYd,SAC3BC,KAAMW,EAAKX,YCLRe,EAAK,aAqBHC,UAxCG,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKU,MAAM,SACX,yBACEd,UAAU,kBACVC,wBAAyB,CAAEC,OAAQE,EAAKW,eAAelB,QAEzD,kBAAC,EAAD,MACA,6BACE,0CACCO,EAAKY,kBAAkBV,MAAMC,KAAI,WAAWU,GAAX,IAAGT,EAAH,EAAGA,KAAH,OAChC,uBAAGC,IAAKD,EAAKG,KAAMO,GAAIV,EAAKG,MAC1B,uBAAGQ,KAAMX,EAAKY,KAAd,KAAwBH,EAAI,GAA5B,KADF,IACyCT,EAAKa,a","file":"component---src-pages-index-js-d719c55139e499afde9c.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Plots = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(\n          sort: { order: ASC, fields: frontmatter___order }\n          filter: { frontmatter: { type: { eq: \"plot\" } } }\n        ) {\n          edges {\n            node {\n              html\n              frontmatter {\n                filename\n                slug\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <Plot\n          key={node.frontmatter.slug}\n          filename={node.frontmatter.filename}\n          html={node.html}\n        />\n      ))}\n    </>\n  )\n}\n\nconst Plot = ({ filename, html }) => (\n  <>\n    <figure>\n      <embed type=\"image/svg+xml\" src={`/plot/${filename}`} />\n    </figure>\n    <div className=\"plot-content\" dangerouslySetInnerHTML={{ __html: html }} />\n  </>\n)\n\nexport default Plots\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Plots from \"../components/plots\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <div\n      className=\"summary-content\"\n      dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}\n    />\n    <Plots />\n    <div>\n      <h1>References</h1>\n      {data.allReferencesYaml.edges.map(({ node }, i) => (\n        <p key={node.slug} id={node.slug}>\n          <a href={node.url}>{`[${i + 1}]`}</a> {node.text}\n        </p>\n      ))}\n    </div>\n  </Layout>\n)\n\nexport const query = graphql`\n  query IndexPageQuery {\n    markdownRemark(frontmatter: { slug: { eq: \"summary\" } }) {\n      frontmatter {\n        title\n        slug\n      }\n      html\n    }\n    allReferencesYaml {\n      edges {\n        node {\n          slug\n          text\n          url\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}